openapi: "3.0.3"
info: 
   version: "1.0.0"
   title: NEATApp


servers:
- description: Development Server
  url: http://localhost:8080/api

paths:
   /kboards/{userId}:
      get:
         description: Get a list of boards for a user
         operationId: getKboardsByUserId
         parameters:
         - name: userId
           in: path
           required: true
           schema:
              type: string
         - name: limit
           in: query
           schema:
              type: integer
              default: 10
              minimum: 1
         - name: offset
           in: query
           schema:
              type: integer
              default: 0
              minimum: 0
         responses:
            '200':
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/GetKboardsResponse"

   /kboard/{userId}:
      post:
         description: Add an new Kboard for user
         operationId: insertKboard
         parameters:
         - name: userId
           in: path
           required: true
           schema:
              type: string
         requestBody:
            description: New Kboard data
            content:
               application/json:
                  schema:
                     $ref: "#/components/schemas/PartialKboard"
         responses:
            '201':
               description: Created
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/PostKboardResponse"

   /kboard/{userId}/{boardId}:
      get:
         description: Get kboard with boardId for user 
         operationId: getKboardByUserIdAndBoardId
         parameters:
         - name: userId
           in: path
           required: true
           schema:
              type: string
         - name: boardId
           in: path
           required: true
           schema:
              type: string
         responses:
            '200':
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/GetKboardResponse"
            '404':
               description: Not found
               content:
                  text/plain:
                     schema:
                        type: string

      put:
         description: Updte kboard with boardId for user 
         operationId: updateKboardByUserIdAndBoardId
         parameters:
         - name: userId
           in: path
           required: true
           schema:
              type: string
         - name: boardId
           in: path
           required: true
           schema:
              type: string
         responses:
            '200':
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/PutKboardResponse"
            '400':
               description: Bad request
               content:
                  text/plain:
                     schema:
                        type: string

      delete:
         description: Delete kboard with boardId for user 
         operationId: deleteKboardByUserIdAndBoardId
         parameters:
         - name: userId
           in: path
           required: true
           schema:
              type: string
         - name: boardId
           in: path
           required: true
           schema:
              type: string
         responses:
            '200':
               description: Deleted
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/DeleteKboardResponse"

components:
   schemas:
      KboardSummary:
         type: object
         properties:
            userId:
               type: string
            createdBy: 
               type: string
               format: email
            boardId: 
               type: string
            title: 
               type: string
            cardCount: 
               type: integer
               minimum: 0
         required: [ "userId", "createdBy", "boardId", "title", "cardCount" ]

      Kcard:
         type: object
         properties:
            description:
               type: string
            priority:
               type: integer
               minimum: 0
               maximum: 2
         required: [ "description", "priority" ]

      Kboard:
         type: object
         properties:
            boardId:
               type: string
            createdOn:
               type: string
               format: date-type
            updatedOn:
               type: string
               format: date-type
            title:
               type: string
            createdBy: 
               type: string
            comments:
               type: string
            cards:
               type: array
               items:
                  $ref: "#/components/schemas/Kcard"
               minItems: 0
         required: [ "createdOn", "createdBy", "boardId", "title", "cards" ]

      PartialKboard:
         type: object
         properties:
            title:
               type: string
            createdBy: 
               type: string
            comments:
               type: string
            cards:
               type: array
               items:
                  $ref: "#/components/schemas/Kcard"
               minItems: 0
         required: [ "title", "createdBy", "cards" ]

      GetKboardsResponse:
         type: object
         properties:
            timestamp:
               type: integer
            statusCode:
               type: integer
            limit:
               type: integer
            offset:
               type: integer
            data:
               type: array
               items:
                  $ref: "#/components/schemas/KboardSummary"
         required: [ "timestamp", "statusCode", "limit", "offset", "data" ]

      GetKboardResponse:
         type: object
         properties:
            timestamp:
               type: integer
            statusCode:
               type: integer
            data:
               $ref: "#/components/schemas/Kboard"
         required: [ "timestamp", "statusCode", "data" ]

      DeleteKboardResponse:
         type: object
         properties:
            timestamp:
               type: integer
            statusCode:
               type: integer
            data:
               type: boolean
         required: [ "timestamp", "statusCode", "data" ]

      PutKboardResponse:
         type: object
         properties:
            timestamp:
               type: integer
            statusCode:
               type: integer
            data:
               type: boolean
         required: [ "timestamp", "statusCode", "data" ]

      PostKboardResponse:
         type: object
         properties:
            timestamp:
               type: integer
            statusCode:
               type: integer
            data:
               type: string
         required: [ "timestamp", "statusCode", "data" ]
